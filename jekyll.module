<?php


/**
 * Implements hook_menu().
 */
function jekyll_menu() {
  $items['jekyll/export'] = array(
    'title' => 'Jekyll Export',
    'page callback' => 'jekyll_export',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function jekyll_export() {
  $category_sql = "SELECT nterm.entity_id nid, cat.name
    FROM field_data_taxonomy_vocabulary_1 nterm
    LEFT JOIN taxonomy_term_data cat ON cat.tid = nterm.taxonomy_vocabulary_1_tid
    WHERE nterm.bundle = 'post' AND nterm.entity_type = 'node'";
  $result = db_query($category_sql);
  $cat_holder = $result->fetchAll();
  $categories = array();
  foreach ($cat_holder as $c) {
    $categories[$c->nid][] = $c->name;
  }
  
  $tag_sql = "SELECT nterm.entity_id nid, tag.name
    FROM field_data_taxonomy_vocabulary_2 nterm
    LEFT JOIN taxonomy_term_data tag ON tag.tid = nterm.taxonomy_vocabulary_2_tid
    WHERE nterm.bundle = 'post' AND nterm.entity_type = 'node'";
  $result = db_query($tag_sql);
  $tag_holder = $result->fetchAll();
  $tags = array();
  foreach ($tag_holder as $c) {
    $tags[$c->nid][] = $c->name;
  }
  
  // Prep dirs
  drupal_rmdir('temporary://_posts');
  drupal_mkdir('temporary://_posts');
  drupal_rmdir('temporary://_drafts');
  drupal_mkdir('temporary://_drafts');
  
  $output = '';
  $sql = "SELECT n.nid, n.title, n.status, n.created, u.alias, b.body_value as body
    FROM {node} n
    LEFT JOIN {url_alias} u ON u.source = concat('node/', n.nid)
    LEFT JOIN field_data_body b ON b.entity_id = n.nid AND b.entity_type='node' AND b.revision_id = n.vid
    WHERE n.type = 'post'";
  
  $result = db_query($sql);
    
  $counter = 0;
  foreach ($result as $record) {
    $nid = $record->nid;
    // Limit control
    $counter++;
    //if ($counter > 10) break;

    // Check if published
    if($record->status > 0) $dir = '_posts';
    else $dir = '_drafts';
    
    // Grab the title, body, and prep for taxonomy terms
    $title = $record->title;
    $body = $record->body;
    $url_path = $record->alias;
    $filedate = date('Y-m-d', $record->created);
    $nicedate = date('Y-m-d G:i', $record->created);

    $filename = strtolower(trim($title));
    $filename = preg_replace('/(&|&amp;)/', ' and ', $filename);
    $filename = preg_replace('/[\s\.\/]/', '-', $filename);
    $filename = preg_replace('/[^\w-]/', '', $filename);
    $filename = preg_replace('/[-_]{2,}/', '-', $filename);
    $filename = preg_replace('/^[-_]/', '', $filename);
    $filename = preg_replace('/[-_]$/', '', $filename);
    $filename = $filedate . '-' . $filename . '.md';
    


    $output .= "$nid: $title. Categories: (" . implode($categories[$nid], ',') . "), tags: (" . implode($tags[$nid], ',') . "). Path: $url_path. Dir: $dir. Filename: $filename<br>";
    
    $uri = 'temporary://' . $dir . '/' . $filename;
    
    $data = "---
layout: post
title: \"" . str_replace('"', '\"', $title) . "\"
date: $nicedate
comments: false
sharing: true
footer: true
permalink: $url_path
categories: [" . implode($categories[$nid], ', ') . "]
tags: [" . implode($tags[$nid], ', ') . "]
---
$body";

    if (file_put_contents($uri, $data) === FALSE) {
      drupal_set_message('Failed to write to ' . $uri, 'error');
    }
  }
  return $output;
}